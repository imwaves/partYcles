const w1=.5*(Math.sqrt(3)-1),s1=(3-Math.sqrt(3))/6,q1=1/3,H=1/6,U1=(Math.sqrt(5)-1)/4,A=(5-Math.sqrt(5))/20,u=new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),a=new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);class D1{constructor(n=Math.random){const e=typeof n=="function"?n:g1(n);this.p=y1(e),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(let o=0;o<512;o++)this.perm[o]=this.p[o&255],this.permMod12[o]=this.perm[o]%12}noise2D(n,e){const o=this.permMod12,m=this.perm;let t=0,y=0,b=0;const k=(n+e)*w1,x=Math.floor(n+k),F=Math.floor(e+k),z=(x+F)*s1,S=x-z,Z=F-z,D=n-S,g=e-Z;let C,G;D>g?(C=1,G=0):(C=0,G=1);const q=D-C+s1,U=g-G+s1,w=D-1+2*s1,r=g-1+2*s1,c=x&255,i=F&255;let s=.5-D*D-g*g;if(s>=0){const M=o[c+m[i]]*3;s*=s,t=s*s*(u[M]*D+u[M+1]*g)}let f=.5-q*q-U*U;if(f>=0){const M=o[c+C+m[i+G]]*3;f*=f,y=f*f*(u[M]*q+u[M+1]*U)}let h=.5-w*w-r*r;if(h>=0){const M=o[c+1+m[i+1]]*3;h*=h,b=h*h*(u[M]*w+u[M+1]*r)}return 70*(t+y+b)}noise3D(n,e,o){const m=this.permMod12,t=this.perm;let y,b,k,x;const F=(n+e+o)*q1,z=Math.floor(n+F),S=Math.floor(e+F),Z=Math.floor(o+F),D=(z+S+Z)*H,g=z-D,C=S-D,G=Z-D,q=n-g,U=e-C,w=o-G;let r,c,i,s,f,h;q>=U?U>=w?(r=1,c=0,i=0,s=1,f=1,h=0):q>=w?(r=1,c=0,i=0,s=1,f=0,h=1):(r=0,c=0,i=1,s=1,f=0,h=1):U<w?(r=0,c=0,i=1,s=0,f=1,h=1):q<w?(r=0,c=1,i=0,s=0,f=1,h=1):(r=0,c=1,i=0,s=1,f=1,h=0);const M=q-r+H,v=U-c+H,O=w-i+H,Q=q-s+2*H,R=U-f+2*H,T=w-h+2*H,W=q-1+3*H,X=U-1+3*H,j=w-1+3*H,K=z&255,L=S&255,N=Z&255;let I=.6-q*q-U*U-w*w;if(I<0)y=0;else{const p=m[K+t[L+t[N]]]*3;I*=I,y=I*I*(u[p]*q+u[p+1]*U+u[p+2]*w)}let J=.6-M*M-v*v-O*O;if(J<0)b=0;else{const p=m[K+r+t[L+c+t[N+i]]]*3;J*=J,b=J*J*(u[p]*M+u[p+1]*v+u[p+2]*O)}let B=.6-Q*Q-R*R-T*T;if(B<0)k=0;else{const p=m[K+s+t[L+f+t[N+h]]]*3;B*=B,k=B*B*(u[p]*Q+u[p+1]*R+u[p+2]*T)}let E=.6-W*W-X*X-j*j;if(E<0)x=0;else{const p=m[K+1+t[L+1+t[N+1]]]*3;E*=E,x=E*E*(u[p]*W+u[p+1]*X+u[p+2]*j)}return 32*(y+b+k+x)}noise4D(n,e,o,m){const t=this.perm;let y,b,k,x,F;const z=(n+e+o+m)*U1,S=Math.floor(n+z),Z=Math.floor(e+z),D=Math.floor(o+z),g=Math.floor(m+z),C=(S+Z+D+g)*A,G=S-C,q=Z-C,U=D-C,w=g-C,r=n-G,c=e-q,i=o-U,s=m-w;let f=0,h=0,M=0,v=0;r>c?f++:h++,r>i?f++:M++,r>s?f++:v++,c>i?h++:M++,c>s?h++:v++,i>s?M++:v++;const O=f>=3?1:0,Q=h>=3?1:0,R=M>=3?1:0,T=v>=3?1:0,W=f>=2?1:0,X=h>=2?1:0,j=M>=2?1:0,K=v>=2?1:0,L=f>=1?1:0,N=h>=1?1:0,I=M>=1?1:0,J=v>=1?1:0,B=r-O+A,E=c-Q+A,p=i-R+A,l1=s-T+A,r1=r-W+2*A,c1=c-X+2*A,i1=i-j+2*A,f1=s-K+2*A,h1=r-L+3*A,a1=c-N+3*A,M1=i-I+3*A,p1=s-J+3*A,u1=r-1+4*A,m1=c-1+4*A,A1=i-1+4*A,d1=s-1+4*A,P=S&255,V=Z&255,Y=D&255,_=g&255;let $=.6-r*r-c*c-i*i-s*s;if($<0)y=0;else{const l=t[P+t[V+t[Y+t[_]]]]%32*4;$*=$,y=$*$*(a[l]*r+a[l+1]*c+a[l+2]*i+a[l+3]*s)}let t1=.6-B*B-E*E-p*p-l1*l1;if(t1<0)b=0;else{const l=t[P+O+t[V+Q+t[Y+R+t[_+T]]]]%32*4;t1*=t1,b=t1*t1*(a[l]*B+a[l+1]*E+a[l+2]*p+a[l+3]*l1)}let e1=.6-r1*r1-c1*c1-i1*i1-f1*f1;if(e1<0)k=0;else{const l=t[P+W+t[V+X+t[Y+j+t[_+K]]]]%32*4;e1*=e1,k=e1*e1*(a[l]*r1+a[l+1]*c1+a[l+2]*i1+a[l+3]*f1)}let o1=.6-h1*h1-a1*a1-M1*M1-p1*p1;if(o1<0)x=0;else{const l=t[P+L+t[V+N+t[Y+I+t[_+J]]]]%32*4;o1*=o1,x=o1*o1*(a[l]*h1+a[l+1]*a1+a[l+2]*M1+a[l+3]*p1)}let n1=.6-u1*u1-m1*m1-A1*A1-d1*d1;if(n1<0)F=0;else{const l=t[P+1+t[V+1+t[Y+1+t[_+1]]]]%32*4;n1*=n1,F=n1*n1*(a[l]*u1+a[l+1]*m1+a[l+2]*A1+a[l+3]*d1)}return 27*(y+b+k+x+F)}}function y1(d){const n=new Uint8Array(256);for(let e=0;e<256;e++)n[e]=e;for(let e=0;e<255;e++){const o=e+~~(d()*(256-e)),m=n[e];n[e]=n[o],n[o]=m}return n}function g1(d){let n=0,e=0,o=0,m=1;const t=x1();return n=t(" "),e=t(" "),o=t(" "),n-=t(d),n<0&&(n+=1),e-=t(d),e<0&&(e+=1),o-=t(d),o<0&&(o+=1),function(){const y=2091639*n+m*23283064365386963e-26;return n=e,e=o,o=y-(m=y|0)}}function x1(){let d=4022871197;return function(n){n=n.toString();for(let e=0;e<n.length;e++){d+=n.charCodeAt(e);let o=.02519603282416938*d;d=o>>>0,o-=d,o*=d,d=o>>>0,o-=d,d+=o*4294967296}return(d>>>0)*23283064365386963e-26}}export default D1;
