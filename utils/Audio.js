import{invlerp as l}from"../snowpack/pkg/ish-utils/math.js";const h=255;export class MicAnalyzer{constructor(){navigator.mediaDevices.getUserMedia({video:!1,audio:{latency:{ideal:.003}}}).then(this._onReady.bind(this),console.error)}_onReady(a){this.ready=!0,this.ctx=new AudioContext,this.mic=this.ctx.createMediaStreamSource(a),this.analyser=this.ctx.createAnalyser(),this.mic.connect(this.analyser),this.freqData=new Uint8Array(this.analyser.frequencyBinCount),this.cacheId=0,this.onReady&&this.onReady()}getVol(a=0){this.updateFreqData(a);let t=0;for(var r=0;r<320;r++){const i=this.freqData[r];if(t=i>t?i:t,t>=h)return t}return l(0,h,t)}updateFreqData(a){a!==this.cacheId&&this.analyser.getByteFrequencyData(this.freqData),this.cacheId=a}}export function drawSpectrum(o,a,t=1024){const{width:r,height:i}=o.$canvas,{ctx:e,iters:c}=o;e.beginPath(),e.moveTo(0,i);for(let s=0;s<t;s=s+1)e.lineTo(r*Math.sqrt(s/t),i-1-a[s]/255*i);e.lineTo(r,i);const n=e.createLinearGradient(0,0,r,i);n.addColorStop(0,`hsla(${c/10}, 50%, 50%, .1)`),n.addColorStop(.5,`hsla(${c/10+90}, 50%, 50%, .1)`),n.addColorStop(1,`hsla(${c/10+180}, 50%, 50%, .1)`),e.fillStyle=n,e.lineWidth=2,e.fill(),e.closePath()}
