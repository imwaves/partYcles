const k1=.5*(Math.sqrt(3)-1),c1=(3-Math.sqrt(3))/6,y1=1/3,Y=1/6,x1=(Math.sqrt(5)-1)/4,g=(5-Math.sqrt(5))/20,m=new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),h=new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);class w1{constructor(o=Math.random){const n=typeof o=="function"?o:A1(o);this.p=z1(n),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(let s=0;s<512;s++)this.perm[s]=this.p[s&255],this.permMod12[s]=this.perm[s]%12}noise2D(o,n){const s=this.permMod12,u=this.perm;let t=0,z=0,G=0;const U=(o+n)*k1,d=Math.floor(o+U),F=Math.floor(n+U),q=(d+F)*c1,b=d-q,Z=F-q,w=o-b,A=n-Z;let D,P;w>A?(D=1,P=0):(D=0,P=1);const y=w-D+c1,x=A-P+c1,k=w-1+2*c1,i=A-1+2*c1,l=d&255,r=F&255;let c=.5-w*w-A*A;if(c>=0){const p=s[l+u[r]]*3;c*=c,t=c*c*(m[p]*w+m[p+1]*A)}let f=.5-y*y-x*x;if(f>=0){const p=s[l+D+u[r+P]]*3;f*=f,z=f*f*(m[p]*y+m[p+1]*x)}let a=.5-k*k-i*i;if(a>=0){const p=s[l+1+u[r+1]]*3;a*=a,G=a*a*(m[p]*k+m[p+1]*i)}return 70*(t+z+G)}noise3D(o,n,s){const u=this.permMod12,t=this.perm;let z,G,U,d;const F=(o+n+s)*y1,q=Math.floor(o+F),b=Math.floor(n+F),Z=Math.floor(s+F),w=(q+b+Z)*Y,A=q-w,D=b-w,P=Z-w,y=o-A,x=n-D,k=s-P;let i,l,r,c,f,a;y>=x?x>=k?(i=1,l=0,r=0,c=1,f=1,a=0):y>=k?(i=1,l=0,r=0,c=1,f=0,a=1):(i=0,l=0,r=1,c=1,f=0,a=1):x<k?(i=0,l=0,r=1,c=0,f=1,a=1):y<k?(i=0,l=1,r=0,c=0,f=1,a=1):(i=0,l=1,r=0,c=1,f=1,a=0);const p=y-i+Y,X=x-l+Y,H=k-r+Y,I=y-c+2*Y,J=x-f+2*Y,K=k-a+2*Y,L=y-1+3*Y,Q=x-1+3*Y,R=k-1+3*Y,v=q&255,B=b&255,E=Z&255;let T=.6-y*y-x*x-k*k;if(T<0)z=0;else{const M=u[v+t[B+t[E]]]*3;T*=T,z=T*T*(m[M]*y+m[M+1]*x+m[M+2]*k)}let W=.6-p*p-X*X-H*H;if(W<0)G=0;else{const M=u[v+i+t[B+l+t[E+r]]]*3;W*=W,G=W*W*(m[M]*p+m[M+1]*X+m[M+2]*H)}let C=.6-I*I-J*J-K*K;if(C<0)U=0;else{const M=u[v+c+t[B+f+t[E+a]]]*3;C*=C,U=C*C*(m[M]*I+m[M+1]*J+m[M+2]*K)}let N=.6-L*L-Q*Q-R*R;if(N<0)d=0;else{const M=u[v+1+t[B+1+t[E+1]]]*3;N*=N,d=N*N*(m[M]*L+m[M+1]*Q+m[M+2]*R)}return 32*(z+G+U+d)}noise4D(o,n,s,u){const t=this.perm;let z,G,U,d,F;const q=(o+n+s+u)*x1,b=Math.floor(o+q),Z=Math.floor(n+q),w=Math.floor(s+q),A=Math.floor(u+q),D=(b+Z+w+A)*g,P=b-D,y=Z-D,x=w-D,k=A-D,i=o-P,l=n-y,r=s-x,c=u-k;let f=0,a=0,p=0,X=0;i>l?f++:a++,i>r?f++:p++,i>c?f++:X++,l>r?a++:p++,l>c?a++:X++,r>c?p++:X++;const H=f>=3?1:0,I=a>=3?1:0,J=p>=3?1:0,K=X>=3?1:0,L=f>=2?1:0,Q=a>=2?1:0,R=p>=2?1:0,v=X>=2?1:0,B=f>=1?1:0,E=a>=1?1:0,T=p>=1?1:0,W=X>=1?1:0,C=i-H+g,N=l-I+g,M=r-J+g,e1=c-K+g,i1=i-L+2*g,l1=l-Q+2*g,r1=r-R+2*g,f1=c-v+2*g,a1=i-B+3*g,h1=l-E+3*g,p1=r-T+3*g,M1=c-W+3*g,m1=i-1+4*g,u1=l-1+4*g,g1=r-1+4*g,j1=c-1+4*g,S=b&255,V=Z&255,_=w&255,$=A&255;let O=.6-i*i-l*l-r*r-c*c;if(O<0)z=0;else{const e=t[S+t[V+t[_+t[$]]]]%32*4;O*=O,z=O*O*(h[e]*i+h[e+1]*l+h[e+2]*r+h[e+3]*c)}let t1=.6-C*C-N*N-M*M-e1*e1;if(t1<0)G=0;else{const e=t[S+H+t[V+I+t[_+J+t[$+K]]]]%32*4;t1*=t1,G=t1*t1*(h[e]*C+h[e+1]*N+h[e+2]*M+h[e+3]*e1)}let n1=.6-i1*i1-l1*l1-r1*r1-f1*f1;if(n1<0)U=0;else{const e=t[S+L+t[V+Q+t[_+R+t[$+v]]]]%32*4;n1*=n1,U=n1*n1*(h[e]*i1+h[e+1]*l1+h[e+2]*r1+h[e+3]*f1)}let s1=.6-a1*a1-h1*h1-p1*p1-M1*M1;if(s1<0)d=0;else{const e=t[S+B+t[V+E+t[_+T+t[$+W]]]]%32*4;s1*=s1,d=s1*s1*(h[e]*a1+h[e+1]*h1+h[e+2]*p1+h[e+3]*M1)}let o1=.6-m1*m1-u1*u1-g1*g1-j1*j1;if(o1<0)F=0;else{const e=t[S+1+t[V+1+t[_+1+t[$+1]]]]%32*4;o1*=o1,F=o1*o1*(h[e]*m1+h[e+1]*u1+h[e+2]*g1+h[e+3]*j1)}return 27*(z+G+U+d+F)}}function z1(j){const o=new Uint8Array(256);for(let n=0;n<256;n++)o[n]=n;for(let n=0;n<255;n++){const s=n+~~(j()*(256-n)),u=o[n];o[n]=o[s],o[s]=u}return o}function A1(j){let o=0,n=0,s=0,u=1;const t=d1();return o=t(" "),n=t(" "),s=t(" "),o-=t(j),o<0&&(o+=1),n-=t(j),n<0&&(n+=1),s-=t(j),s<0&&(s+=1),function(){const z=2091639*o+u*23283064365386963e-26;return o=n,n=s,s=z-(u=z|0)}}function d1(){let j=4022871197;return function(o){o=o.toString();for(let n=0;n<o.length;n++){j+=o.charCodeAt(n);let s=.02519603282416938*j;j=s>>>0,s-=j,s*=j,j=s>>>0,s-=j,j+=s*4294967296}return(j>>>0)*23283064365386963e-26}}export default w1;
