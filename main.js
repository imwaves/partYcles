import*as v from"./snowpack/env.js";import.meta.env=v;import{Pane as M}from"./snowpack/pkg/tweakpane.js";import{askWorker as E,sendWorker as _,descriptForWorker as i}from"./utils/common.js";import{jsonCopy as q}from"./snowpack/pkg/ish-utils/common.js";import{lerp as T,invlerp as W}from"./snowpack/pkg/ish-utils/math.js";import z from"./utils/qs.js";import{MicAnalyzer as D,drawSpectrum as U}from"./utils/Audio.js";import{SketchControls as L,Presets as N}from"./utils/Pane.js";import G from"./utils/Sketch.js";import H from"./utils/Offscreen.js";import F from"./palletes.js";import A from"./defaultPresets.js";import{checkUserEnv as K}from"./utils/userEnv.js";K();const w="Default",o=new Worker(new URL("./worker.js",import.meta.url),{name:"circlesWorker",type:"module"});let ut=3;const g=document.querySelector("#MorphParams"),I=document.querySelector("#EdgeDetectParams"),f=[7,10];let ct=!1,C=!1,B,J,t={};const a=new G({fullwidth:!0,bindKeys:{p(e){d.expanded=!d.expanded,a.$stats.style.display=d.expanded?"inline-block":"none"},o(e){s.expanded=!s.expanded},i(e){n.expanded=!n.expanded},u(e){x.expanded=!x.expanded},b(e){b()},f(e){(C=!C)?document.body.requestFullscreen():document.exitFullscreen()},q(e){S()},"/":b},onResize({width:e,height:r}){B=e,J=r,_.call(o,"resize",{width:e,height:r})}});window.$art=a;const Q=A[w];t={get morphRad(){return(g.getAttribute("operator")==="dilate"?1:-1)*Math.abs(parseFloat(g.getAttribute("radius")))},set morphRad(e){return g.setAttribute("operator",e>0?"dilate":"erode"),g.setAttribute("radius",e.toFixed(3)),console.log("set morphRad",e),e},get edgeRad(){return parseFloat(I.getAttribute("kernelMatrix").split(" ")[4])},set edgeRad(e){const r=I.getAttribute("kernelMatrix").split(" ");return e===f[0]?e=0:e===(f[0]+f[1])/2&&(e=e+.001),r[4]=e,console.log("set edgeRad",e),I.setAttribute("kernelMatrix",r.join(" "))}},Object.assign(t,q(Q)),i(o,"params",t,"attract"),i(o,"params",t,"distance"),i(o,"params",t,"flock"),i(o,"params",t,"align"),i(o,"params",t,"mult"),i(o,"params",t,"mirrorEdges"),i(o,"params",t,"amount"),i(o,"params",t,"wind"),i(o,"params",t,"gravity"),i(o,"params",t,"turbulence"),i(o,"params",t,"turbMorph");const d=window.$pane=new M;d.expanded=!1;const m=d.addFolder({title:"Preferences [P]"}),V=new N({pane:d,defaultPresets:A,folder:m,defaultPresetName:w}),{toggleRecording:S}=new L(m,a,b);t.hasOwnProperty("micOn")||(t.micOn=!0),m.addInput(t,"micOn");const c=.001,s=m.addFolder({title:"Effects [O]"});s.addInput(t,"translate",{x:{min:-5,max:5},y:{min:-5,max:5}}),s.addInput(t,"contrast",{min:0,max:3,step:c}),s.addInput(t,"invContrast"),s.addInput(t,"blur",{min:0,max:10,step:c}),s.addInput(t,"opacity",{min:0,max:1,step:c}),s.addInput(t,"opacityCanv",{min:0,max:1,step:c}),s.addInput(t,"morphRad",{min:-10,max:10,step:c}),s.addInput(t,"edgeRadOn"),s.addInput(t,"edgeRad",{min:f[0],max:f[1],step:c}),s.addSeparator();const n=m.addFolder({title:"Particles [I]",expanded:!1});n.addInput(t,"color",{options:Object.keys(F).map(e=>({text:e,value:e}))}),n.addInput(t,"size",{min:0,max:6}),n.addInput(t,"attract"),n.addInput(t,"amount",{min:0,max:1e3,step:1}),n.addInput(t,"flock",{min:0,max:2}),n.addInput(t,"align",{min:0,max:2}),n.addInput(t,"distance",{min:15,max:150}),n.addInput(t,"mult",{min:0,max:10}),n.addInput(t,"mirrorEdges"),n.addInput(t,"wind",{min:-3,max:3}),n.addInput(t,"gravity",{min:-3,max:3}),n.addInput(t,"turbulence"),n.addInput(t,"turbMorph",{min:0,max:300});const x=m.addFolder({title:"Vibrations (Freq / Amp) [U]"});x.addInput(t,"contrastVibr",{x:{min:0,max:3},y:{min:0,max:3}}),x.addInput(t,"blurVibr",{x:{min:0,max:3},y:{min:0,max:3}}),x.addInput(t,"sizeVibr",{x:{min:0,max:50},y:{min:0,max:3}});let P=V.list[V.current];P||(P=V.list[w],console.log("main.js",m)),d.importPreset(P);function X(e,r){e.beginPath();const h=F[t.color];e.strokeStyle=h[r.id%h.length]+"66",e.moveTo(r.lastPos.x,r.lastPos.y);const u=(t.micOn?y.avgVol*15-2:0)+t.size+Math.sin(a.iters/100*t.sizeVibr.x+r.id/10)*t.sizeVibr.y;e.lineCap=u>2?"round":"butt",e.lineWidth=u*2,u>0&&(e.lineTo(r.pos.x,r.pos.y),e.stroke()),e.closePath()}const j=new H({parent:a,padding:50,real:!1});window.$feedback=j;function b(){j.clear(),a.clear(),E.call(o,"init",{width:a.W,height:a.H,amount:t.amount,arrangement:"voidCircle"}).then(e=>a.animate(Y,e))}const O=new D;O.onReady=b;const ft=document.querySelector("#TurbOffsetParams"),xt=document.querySelector("#TurbParams"),y={avgVol:0,minVol:0,dynVol:0};let p=0;function Y(e,r){const h=Date.now(),R=E.call(o,"update",{mouse:a.mouse}),u=t.contrast+Math.sin(e.iters/100*t.contrastVibr.x)*t.contrastVibr.y,$=t.blur+Math.sin(a.iters/100*t.blurVibr.x)*t.blurVibr.y;if(t.micOn){const l=O.getVol(a.iters);p+=l<p?(l-p)/1:(l-p)/100,y.minVol=p;const k=y.avgVol=W(Math.min(.5,p+.03),1,T(0,1,l));y.dynVol=k-p}return j.letThrough(`blur(${$}px) contrast(${u}) contrast(${1/(t.invContrast?u:1)}) opacity(${t.opacity})`,null,({ctx:l})=>{a.ctx.translate(t.translate.x,t.translate.y),a.ctx.filter=`url(#Morph) ${t.edgeRadOn?"url(#EdgeDetect)":""} opacity(${t.opacityCanv})`}),t.micOn&&U(a,O.freqData,480),a.ctx.setTransform(1,0,0,1,0,0),a.ctx.filter="none",r.forEach((l,k)=>X(a.ctx,l,k)),R}z.get("record")&&S(),setTimeout(()=>{d.expanded=!0},500);export default null;
